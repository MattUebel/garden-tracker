"""Initial migration

Revision ID: e3e3dce7551b
Revises: 
Create Date: 2025-03-02 19:38:27.362561

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e3e3dce7551b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('garden_supplies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('image_path', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('seed_packets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('image_path', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('years',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('year')
    )
    
    # Create enum type first
    op.execute("CREATE TYPE plantingmethod AS ENUM ('Raised Bed', 'Seedly Tray', 'Pot', 'Ground')")
    
    op.create_table('plants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('planting_method', sa.Enum('Raised Bed', 'Seedly Tray', 'Pot', 'Ground', name='plantingmethod', create_type=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('year_id', sa.Integer(), nullable=False),
    sa.Column('seed_packet_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['seed_packet_id'], ['seed_packets.id'], ),
    sa.ForeignKeyConstraint(['year_id'], ['years.year'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('harvests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weight_oz', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('plant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['plant_id'], ['plants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.String(), nullable=False),
    sa.Column('image_path', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('plant_id', sa.Integer(), nullable=True),
    sa.Column('seed_packet_id', sa.Integer(), nullable=True),
    sa.Column('garden_supply_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['garden_supply_id'], ['garden_supplies.id'], ),
    sa.ForeignKeyConstraint(['plant_id'], ['plants.id'], ),
    sa.ForeignKeyConstraint(['seed_packet_id'], ['seed_packets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plant_supplies',
    sa.Column('plant_id', sa.Integer(), nullable=False),
    sa.Column('supply_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['plant_id'], ['plants.id'], ),
    sa.ForeignKeyConstraint(['supply_id'], ['garden_supplies.id'], ),
    sa.PrimaryKeyConstraint('plant_id', 'supply_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('plant_supplies')
    op.drop_table('notes')
    op.drop_table('harvests')
    op.drop_table('plants')
    op.execute("DROP TYPE plantingmethod")
    op.drop_table('years')
    op.drop_table('seed_packets')
    op.drop_table('garden_supplies')
    # ### end Alembic commands ###